{"ast":null,"code":"var _jsxFileName = \"/Users/macmini/Desktop/Lumetrio/artio/src/Darkmode.js\";\nimport React from \"react\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: \"light\"\n    };\n    this.handleLightMode = this.handleLightMode.bind(this);\n    this.handleDarkMode = this.handleDarkMode.bind(this);\n  }\n  handleLightMode() {\n    this.setState({\n      mode: \"light\"\n    });\n  }\n  handleDarkMode() {\n    this.setState({\n      mode: \"dark\"\n    });\n  }\n  render() {\n    const {\n      mode\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        background: mode === \"light\" ? \"#fff\" : \"#333333\"\n      },\n      children: mode === \"light\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleDarkMode,\n        children: \"Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleLightMode,\n        children: \"Light Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 17\n}, this), document.getElementById(\"Darkmode\"));","map":{"version":3,"names":["React","Container","Component","constructor","props","state","mode","handleLightMode","bind","handleDarkMode","setState","render","height","background","ReactDOM","document","getElementById"],"sources":["/Users/macmini/Desktop/Lumetrio/artio/src/Darkmode.js"],"sourcesContent":["import React from \"react\";\nimport './index.css'\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mode: \"light\"\n    };\n\n    this.handleLightMode = this.handleLightMode.bind(this);\n    this.handleDarkMode = this.handleDarkMode.bind(this);\n  }\n  handleLightMode() {\n    this.setState({\n      mode: \"light\"\n    });\n  }\n  handleDarkMode() {\n    this.setState({\n      mode: \"dark\"\n    });\n  }\n  render() {\n    const { mode } = this.state;\n\n    return (\n      <div\n        style={{\n          height: \"100%\",\n          background: mode === \"light\" ? \"#fff\" : \"#333333\"\n        }}\n      >\n        {mode === \"light\" ? (\n          <button onClick={this.handleDarkMode}>Dark Mode</button>\n        ) : (\n          <button onClick={this.handleLightMode}>Light Mode</button>\n        )}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Container />, document.getElementById(\"Darkmode\"));\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAA;AAEpB,MAAMC,SAAS,SAASD,KAAK,CAACE,SAAS,CAAC;EACtCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACXC,IAAI,EAAE;IACR,CAAC;IAED,IAAI,CAACC,eAAe,GAAG,IAAI,CAACA,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACD,IAAI,CAAC,IAAI,CAAC;EACtD;EACAD,eAAe,GAAG;IAChB,IAAI,CAACG,QAAQ,CAAC;MACZJ,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACAG,cAAc,GAAG;IACf,IAAI,CAACC,QAAQ,CAAC;MACZJ,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;EACAK,MAAM,GAAG;IACP,MAAM;MAAEL;IAAK,CAAC,GAAG,IAAI,CAACD,KAAK;IAE3B,oBACE;MACE,KAAK,EAAE;QACLO,MAAM,EAAE,MAAM;QACdC,UAAU,EAAEP,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG;MAC1C,CAAE;MAAA,UAEDA,IAAI,KAAK,OAAO,gBACf;QAAQ,OAAO,EAAE,IAAI,CAACG,cAAe;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,gBAExD;QAAQ,OAAO,EAAE,IAAI,CAACF,eAAgB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IACvC;MAAA;MAAA;MAAA;IAAA,QACG;EAEV;AACF;AAEAO,QAAQ,CAACH,MAAM,eAAC,QAAC,SAAS;EAAA;EAAA;EAAA;AAAA,QAAG,EAAEI,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"module"}