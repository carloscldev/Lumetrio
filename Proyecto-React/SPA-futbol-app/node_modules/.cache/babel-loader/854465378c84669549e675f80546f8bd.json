{"ast":null,"code":"var _jsxFileName = \"/Users/macmini/Desktop/Lumetrio/artio/src/darkmode.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  _s();\n  const [darkMode, setDarkMode] = React.useState(false);\n  React.useEffect(() => {\n    const body = document.body;\n    const toggle = document.querySelector('.toggle-inner');\n\n    // If dark mode is enabled - adds classes to update dark-mode styling.\n    // Else, removes and styling is as normal.\n    if (darkMode === true) {\n      body.classList.add('dark-mode');\n      toggle.classList.add('toggle-active');\n    } else {\n      body.classList.remove('dark-mode');\n      toggle.classList.remove('toggle-active');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"logo\",\n      children: \"LOGO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toggle\",\n        onClick: () => darkMode === false ? setDarkMode(true) : setDarkMode(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-inner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"6T3I53g/0BVXG7llmbdXZ5HyKKA=\");\n_c = Header;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Simple React Dark Mode.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Uses state to set a class on the body if dark mode is enabled.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c2 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this), document.getElementById('darkmode'));\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Header","darkMode","setDarkMode","React","useState","useEffect","body","document","toggle","querySelector","classList","add","remove","App","ReactDOM","render","getElementById"],"sources":["/Users/macmini/Desktop/Lumetrio/artio/src/darkmode.js"],"sourcesContent":["function Header() {\n  const [ darkMode, setDarkMode ] = React.useState(false)\n   \n  React.useEffect(() => {\n    const body = document.body\n    const toggle = document.querySelector('.toggle-inner')\n    \n    // If dark mode is enabled - adds classes to update dark-mode styling.\n    // Else, removes and styling is as normal.\n    if( darkMode === true ) {\n      body.classList.add('dark-mode')\n      toggle.classList.add('toggle-active')\n    } else {\n      body.classList.remove('dark-mode')\n      toggle.classList.remove('toggle-active')\n    }\n  }, [darkMode])\n  \n  return (\n    <header className='nav'>\n      <div class=\"logo\">LOGO</div>\n      <div class=\"options\">\n    <button>\n      Theme\n    </button>\n      <div\n        id=\"toggle\"\n        onClick={() => darkMode === false ? setDarkMode(true) : setDarkMode(false)}\n      >\n        <div className=\"toggle-inner\"/>\n      </div>\n        </div>\n    </header>\n  )\n}\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <div id=\"container\">\n        <h1>Simple React Dark Mode.</h1>\n        <p>Uses state to set a class on the body if dark mode is enabled.</p>\n      </div>\n    </>\n  )\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('darkmode')\n)"],"mappings":";;;;AAAA,SAASA,MAAM,GAAG;EAAA;EAChB,MAAM,CAAEC,QAAQ,EAAEC,WAAW,CAAE,GAAGC,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EAEvDD,KAAK,CAACE,SAAS,CAAC,MAAM;IACpB,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1B,MAAME,MAAM,GAAGD,QAAQ,CAACE,aAAa,CAAC,eAAe,CAAC;;IAEtD;IACA;IACA,IAAIR,QAAQ,KAAK,IAAI,EAAG;MACtBK,IAAI,CAACI,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MAC/BH,MAAM,CAACE,SAAS,CAACC,GAAG,CAAC,eAAe,CAAC;IACvC,CAAC,MAAM;MACLL,IAAI,CAACI,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;MAClCJ,MAAM,CAACE,SAAS,CAACE,MAAM,CAAC,eAAe,CAAC;IAC1C;EACF,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAQ,SAAS,EAAC,KAAK;IAAA,wBACrB;MAAK,KAAK,EAAC,MAAM;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,eAC5B;MAAK,KAAK,EAAC,SAAS;MAAA,wBACtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAES,eACP;QACE,EAAE,EAAC,QAAQ;QACX,OAAO,EAAE,MAAMA,QAAQ,KAAK,KAAK,GAAGC,WAAW,CAAC,IAAI,CAAC,GAAGA,WAAW,CAAC,KAAK,CAAE;QAAA,uBAE3E;UAAK,SAAS,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEb;AAAC,GAlCQF,MAAM;AAAA,KAANA,MAAM;AAoCf,SAASa,GAAG,GAAG;EACb,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV;MAAK,EAAE,EAAC,WAAW;MAAA,wBACjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgC,eAChC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqE;IAAA;MAAA;MAAA;MAAA;IAAA,QACjE;EAAA,gBACL;AAEP;AAAC,MAVQA,GAAG;AAYZC,QAAQ,CAACC,MAAM,eACb,QAAC,GAAG;EAAA;EAAA;EAAA;AAAA,QAAG,EACPR,QAAQ,CAACS,cAAc,CAAC,UAAU,CAAC,CACpC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}